--创建es_sommelier表
BEGIN
	EXECUTE IMMEDIATE 'DROP TRIGGER TIB_ES_SOMMELIER';
	EXCEPTION WHEN OTHERS THEN NULL;
END;

BEGIN
	EXECUTE IMMEDIATE 'DROP TABLE ES_SOMMELIER';
	EXCEPTION WHEN OTHERS THEN NULL;
END;

BEGIN
	EXECUTE IMMEDIATE 'DROP SEQUENCE S_ES_SOMMELIER';
	EXCEPTION WHEN OTHERS THEN NULL;
END;

CREATE TABLE ES_SOMMELIER (
  ID NUMBER(100) NOT NULL,
  USERNAME VARCHAR(200) DEFAULT NULL,
  PASS VARCHAR(100) DEFAULT NULL,
  CPASS VARCHAR(100) DEFAULT NULL,
  INTRODUCE VARCHAR(200) DEFAULT NULL,
  NAME VARCHAR(100) DEFAULT NULL,
  MOBILE VARCHAR(100) DEFAULT NULL,
  PRIMARY KEY (ID)
);

CREATE SEQUENCE S_ES_SOMMELIER;

CREATE TRIGGER "TIB_ES_SOMMELIER" BEFORE INSERT
	ON ES_SOMMELIER FOR EACH ROW
	DECLARE
	INTEGRITY_ERROR  EXCEPTION;
	ERRNO            INTEGER;
	ERRMSG           CHAR(200);
	MAXID						 INTEGER;
	BEGIN
		IF :NEW."ID" IS NULL THEN
			SELECT MAX("ID") INTO MAXID FROM ES_SOMMELIER;
			SELECT S_ES_SOMMELIER.NEXTVAL INTO :NEW."ID" FROM DUAL;
			IF MAXID>:NEW."ID" THEN
				LOOP
					SELECT S_ES_SOMMELIER.NEXTVAL INTO :NEW."ID" FROM DUAL;
					EXIT WHEN MAXID<:NEW."ID";
				END LOOP;
			END IF;
		END IF;
	EXCEPTION
		WHEN INTEGRITY_ERROR THEN
			RAISE_APPLICATION_ERROR(ERRNO, ERRMSG);
END;

--创建es_sommelier_comment 评论表
BEGIN
	EXECUTE IMMEDIATE 'DROP TRIGGER TIB_ES_SOMMELIER_COMMENT';
	EXCEPTION WHEN OTHERS THEN NULL;
END;

BEGIN
	EXECUTE IMMEDIATE 'DROP TABLE ES_SOMMELIER_COMMENT';
	EXCEPTION WHEN OTHERS THEN NULL;
END;

BEGIN
	EXECUTE IMMEDIATE 'DROP SEQUENCE S_ES_SOMMELIER_COMMENT';
	EXCEPTION WHEN OTHERS THEN NULL;
END;

CREATE TABLE ES_SOMMELIER_COMMENT (
  ID NUMBER(38) NOT NULL,
  SOMMELIERID NUMBER(38)  DEFAULT NULL,
  GOOD NUMBER(38)  DEFAULT NULL,
  BAD NUMBER(38)  DEFAULT NULL
  PRIMARY KEY (ID)
);

CREATE SEQUENCE S_ES_SOMMELIER_COMMENT;

CREATE TRIGGER "TIB_ES_SOMMELIER_COMMENT" BEFORE INSERT
	ON ES_SOMMELIER_COMMENT FOR EACH ROW
	DECLARE
	INTEGRITY_ERROR  EXCEPTION;
	ERRNO            INTEGER;
	ERRMSG           CHAR(200);
	MAXID						 INTEGER;
	BEGIN
		IF :NEW."ID" IS NULL THEN
			SELECT MAX("ID") INTO MAXID FROM ES_SOMMELIER_COMMENT;
			SELECT S_ES_SOMMELIER_COMMENT.NEXTVAL INTO :NEW."ID" FROM DUAL;
			IF MAXID>:NEW."ID" THEN
				LOOP
					SELECT S_ES_SOMMELIER_COMMENT.NEXTVAL INTO :NEW."ID" FROM DUAL;
					EXIT WHEN MAXID<:NEW."ID";
				END LOOP;
			END IF;
		END IF;
	EXCEPTION
		WHEN INTEGRITY_ERROR THEN
			RAISE_APPLICATION_ERROR(ERRNO, ERRMSG);
END;