--创建es_cf表
BEGIN
	EXECUTE IMMEDIATE 'DROP TRIGGER TIB_ES_CF';
	EXCEPTION WHEN OTHERS THEN NULL;
END;

BEGIN
	EXECUTE IMMEDIATE 'DROP TABLE ES_CF';
	EXCEPTION WHEN OTHERS THEN NULL;
END;

BEGIN
	EXECUTE IMMEDIATE 'DROP SEQUENCE S_ES_CF';
	EXCEPTION WHEN OTHERS THEN NULL;
END;

CREATE TABLE ES_CF (
  ID NUMBER(100) NOT NULL AUTO_INCREMENT,
  TITLE VARCHAR(200) DEFAULT NULL,
  CONTENT VARCHAR(500) DEFAULT NULL,
  MEMBER VARCHAR(500) DEFAULT NULL,
  PRICE NUMBER(100) DEFAULT NULL,
  LENGTH NUMBER(100) DEFAULT NULL,
  TIME VARCHAR(200) DEFAULT NULL,
  TARGET VARCHAR(20) DEFAULT NULL,
  CFFROM VARCHAR(30) DEFAULT NULL,
  STATUS VARCHAR(20) DEFAULT NULL,
  BIMAGE VARCHAR(500) DEFAULT NULL,
  IIMAGE VARCHAR(500) DEFAULT NULL,
  DETAIL_IMAGE VARCHAR(500) DEFAULT NULL,
  RELEASE_TIME VARCHAR(100) DEFAULT NULL,
  ALREADY_GET NUMBER(20) DEFAULT NULL,
  RELEASE_NICKNAME VARCHAR(200) DEFAULT NULL,
  RELEASE_FACE VARCHAR(500) DEFAULT NULL,
  SUBHEADING VARCHAR(300) DEFAULT NULL,
  CLICK NUMBER(28) DEFAULT NULL,
  BRIEF VARCHAR(1000) DEFAULT NULL,
  PRIMARY KEY (ID)
);

CREATE SEQUENCE S_ES_CF;

CREATE TRIGGER "TIB_ES_CF" BEFORE INSERT
	ON ES_CF FOR EACH ROW
	DECLARE
	INTEGRITY_ERROR  EXCEPTION;
	ERRNO            INTEGER;
	ERRMSG           CHAR(200);
	MAXID						 INTEGER;
	BEGIN
		IF :NEW."ID" IS NULL THEN
			SELECT MAX("ID") INTO MAXID FROM ES_CF;
			SELECT S_ES_CF.NEXTVAL INTO :NEW."ID" FROM DUAL;
			IF MAXID>:NEW."ID" THEN
				LOOP
					SELECT S_ES_CF.NEXTVAL INTO :NEW."ID" FROM DUAL;
					EXIT WHEN MAXID<:NEW."ID";
				END LOOP;
			END IF;
		END IF;
	EXCEPTION
		WHEN INTEGRITY_ERROR THEN
			RAISE_APPLICATION_ERROR(ERRNO, ERRMSG);
END;