--创建es_auction表
BEGIN
	EXECUTE IMMEDIATE 'DROP TRIGGER TIB_ES_AUCTION';
	EXCEPTION WHEN OTHERS THEN NULL;
END;

BEGIN
	EXECUTE IMMEDIATE 'DROP TABLE ES_AUCTION';
	EXCEPTION WHEN OTHERS THEN NULL;
END;

BEGIN
	EXECUTE IMMEDIATE 'DROP SEQUENCE S_ES_AUCTION';
	EXCEPTION WHEN OTHERS THEN NULL;
END;

CREATE TABLE ES_AUCTION (
  ID NUMBER(20) NOT NULL ,
  TITLE VARCHAR(200) DEFAULT NULL,
  CONTENT VARCHAR(200) DEFAULT NULL,
  MEMBER VARCHAR(200) DEFAULT NULL,
  SPRICE VARCHAR(100) DEFAULT '',
  APRICE VARCHAR(200) DEFAULT '',
  CPRICE VARCHAR(200) DEFAULT '',
  STATUS VARCHAR(100) DEFAULT NULL,
  TIME VARCHAR(200) DEFAULT NULL,
  LENGTH NUMBER(30) DEFAULT NULL,
  PRIMARY KEY (ID)
);

CREATE SEQUENCE S_ES_AUCTION;

CREATE TRIGGER "TIB_ES_AUCTION" BEFORE INSERT
	ON ES_AUCTION FOR EACH ROW
	DECLARE
	INTEGRITY_ERROR  EXCEPTION;
	ERRNO            INTEGER;
	ERRMSG           CHAR(200);
	MAXID						 INTEGER;
	BEGIN
		IF :NEW."ID" IS NULL THEN
			SELECT MAX("ID") INTO MAXID FROM ES_AUCTION;
			SELECT S_ES_AUCTION.NEXTVAL INTO :NEW."ID" FROM DUAL;
			IF MAXID>:NEW."ID" THEN
				LOOP
					SELECT S_ES_AUCTION.NEXTVAL INTO :NEW."ID" FROM DUAL;
					EXIT WHEN MAXID<:NEW."ID";
				END LOOP;
			END IF;
		END IF;
	EXCEPTION
		WHEN INTEGRITY_ERROR THEN
			RAISE_APPLICATION_ERROR(ERRNO, ERRMSG);
END;