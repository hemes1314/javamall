--创建ES_VIRTUAL_PRODUCT表
BEGIN
	EXECUTE IMMEDIATE 'DROP TRIGGER TIB_ES_VIRTUAL_PRODUCT';
	EXCEPTION WHEN OTHERS THEN NULL;
END;

BEGIN
	EXECUTE IMMEDIATE 'DROP TABLE ES_VIRTUAL_PRODUCT';
	EXCEPTION WHEN OTHERS THEN NULL;
END;

BEGIN
	EXECUTE IMMEDIATE 'DROP SEQUENCE S_ES_VIRTUAL_PRODUCT';
	EXCEPTION WHEN OTHERS THEN NULL;
END;

CREATE TABLE ES_VIRTUAL_PRODUCT (
  ID NUMBER(38) NOT NULL,
  NAME VARCHAR(200) DEFAULT NULL,
  DESCRIBE VARCHAR(500) DEFAULT NULL,
  PRICE NUMBER(38,2) DEFAULT NULL,
  IMAGES VARCHAR(300) DEFAULT NULL,
  VALID VARCHAR(50) DEFAULT NULL,
  PRIMARY KEY (ID)
);

CREATE SEQUENCE S_ES_VIRTUAL_PRODUCT;

CREATE TRIGGER "TIB_ES_VIRTUAL_PRODUCT" BEFORE INSERT
	ON ES_VIRTUAL_PRODUCT FOR EACH ROW
	DECLARE
	INTEGRITY_ERROR  EXCEPTION;
	ERRNO            INTEGER;
	ERRMSG           CHAR(200);
	MAXID						 INTEGER;
	BEGIN
		IF :NEW."ID" IS NULL THEN
			SELECT MAX("ID") INTO MAXID FROM ES_VIRTUAL_PRODUCT;
			SELECT S_ES_VIRTUAL_PRODUCT.NEXTVAL INTO :NEW."ID" FROM DUAL;
			IF MAXID>:NEW."ID" THEN
				LOOP
					SELECT S_ES_VIRTUAL_PRODUCT.NEXTVAL INTO :NEW."ID" FROM DUAL;
					EXIT WHEN MAXID<:NEW."ID";
				END LOOP;
			END IF;
		END IF;
	EXCEPTION
		WHEN INTEGRITY_ERROR THEN
			RAISE_APPLICATION_ERROR(ERRNO, ERRMSG);
END;

--创建ES_VIRTUAL_PRODUCT_LOG表
BEGIN
	EXECUTE IMMEDIATE 'DROP TRIGGER TIB_ES_VIRTUAL_PRODUCT_LOG';
	EXCEPTION WHEN OTHERS THEN NULL;
END;

BEGIN
	EXECUTE IMMEDIATE 'DROP TABLE ES_VIRTUAL_PRODUCT_LOG';
	EXCEPTION WHEN OTHERS THEN NULL;
END;

BEGIN
	EXECUTE IMMEDIATE 'DROP SEQUENCE S_VIRTUAL_PRODUCT_LOG';
	EXCEPTION WHEN OTHERS THEN NULL;
END;

CREATE TABLE ES_VIRTUAL_PRODUCT_LOG (
  ID NUMBER(11) NOT NULL,
  SENDER NUMBER(11) NOT NULL,
  RECEIVER NUMBER(11) NOT NULL,
  VIRTUAL_PRODUCT_ID NUMBER(11) NOT NULL,
  PRIMARY KEY (ID)
);

CREATE SEQUENCE S_ES_VIRTUAL_PRODUCT_LOG;

CREATE TRIGGER "TIB_ES_VIRTUAL_PRODUCT_LOG" BEFORE INSERT
	ON ES_VIRTUAL_PRODUCT_LOG FOR EACH ROW
	DECLARE
	INTEGRITY_ERROR  EXCEPTION;
	ERRNO            INTEGER;
	ERRMSG           CHAR(200);
	MAXID						 INTEGER;
	BEGIN
		IF :NEW."ID" IS NULL THEN
			SELECT MAX("ID") INTO MAXID FROM ES_VIRTUAL_PRODUCT_LOG;
			SELECT S_ES_VIRTUAL_PRODUCT_LOG.NEXTVAL INTO :NEW."ID" FROM DUAL;
			IF MAXID>:NEW."ID" THEN
				LOOP
					SELECT S_ES_VIRTUAL_PRODUCT_LOG.NEXTVAL INTO :NEW."ID" FROM DUAL;
					EXIT WHEN MAXID<:NEW."ID";
				END LOOP;
			END IF;
		END IF;
	EXCEPTION
		WHEN INTEGRITY_ERROR THEN
			RAISE_APPLICATION_ERROR(ERRNO, ERRMSG);
END;