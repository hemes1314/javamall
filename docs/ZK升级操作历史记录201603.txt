﻿1.
30 PC端-酒文化文章发布时，修改一个字段为来源，详细页面微调一下页面。
后台登录，在最下面的开发者里面，选中文章模型，编辑文章咨询，把“标题”改为“手机端标题”
来源：
ALTER TABLE es_information ADD (source varchar(100));

2. - Jeffrey
22 23 46 订单表增加活动标识，大于0代表参与活动的订单，用于区别未付款的自动取消时间，以及正常订单自动取消时间的不一致
ALTER TABLE es_order ADD (activities number default 0);

3.手机端-酒沫，添加好友/没有消息推送。没有好友确认。
ALTER TABLE es_liaomo_friend ADD (status int);
update es_liaomo_friend set status=101;

status:如果A添加B为好友
1:已经添加,未确认
2:收到请求,未确认
11:请求被拒绝
12:已经拒绝对方请求
13:已经忽略请求
101:成功添加为好友

4.手机端 首页轮播 - Jeffrey
DROP TABLE ES_APP_ADV;
CREATE TABLE ES_APP_ADV (
	AID NUMBER(20) PRIMARY KEY,
	IMG_TYPE NUMBER(2) NOT NULL, -- 1商品列表 2商品详情 3专题 4闪购 5  预售
	DETAIL VARCHAR2(100), --商品分类ID 商品ID 专题链接  S就是个标识，让手机端知道跳转到闪购页面 Y就是个标识，让手机端知道跳转到预售页面
	PROP VARCHAR2(100), --商品类型
	IMG_URL VARCHAR2(200) NOT NULL, --图片地址
	INTRODUCE VARCHAR2(200) NOT NULL --标题
);

DROP SEQUENCE ES_APP_ADV_SEQUENCE;
CREATE SEQUENCE ES_APP_ADV_SEQUENCE
MINVALUE 1        --最小值
NOMAXVALUE        --不设置最大值
START WITH 1      --从1开始计数
INCREMENT BY 1    --每次加1个
NOCYCLE           --一直累加，不循环
NOCACHE;          --不建缓冲区

CREATE OR REPLACE TRIGGER ES_APP_ADV_TG 
BEFORE INSERT ON ES_APP_ADV FOR EACH ROW WHEN (NEW.AID IS NULL)
BEGIN
SELECT ES_APP_ADV_SEQUENCE.NEXTVAL INTO:NEW.AID FROM DUAL;
END;

5.直降功能 - Jeffrey
ALTER TABLE ES_GOODS ADD (IS_COST_DOWN NUMBER DEFAULT 0);


DROP TABLE "ES_COST_DOWN_GOODS";
CREATE TABLE "ES_COST_DOWN_GOODS" (
"GB_ID" NUMBER(11) NOT NULL ,
"PRODUCT_ID" NUMBER(11) NULL ,
"ACT_ID" NUMBER(11) NULL ,
"CAT_ID" NUMBER(11) NULL ,
"AREA_ID" NUMBER(11) NULL ,
"GB_NAME" VARCHAR2(1000 BYTE) NULL ,
"GB_TITLE" VARCHAR2(1000 BYTE) NULL ,
"GOODS_NAME" VARCHAR2(255 BYTE) NULL ,
"GOODS_ID" NUMBER(11) NULL ,
"ORIGINAL_PRICE" NUMBER(20,2) NULL ,
"PRICE" NUMBER(20,2) NULL ,
"IMG_URL" VARCHAR2(255 BYTE) NULL ,
"GOODS_NUM" NUMBER(11) NULL ,
"VISUAL_NUM" NUMBER(11) NULL ,
"LIMIT_NUM" NUMBER(11) NULL ,
"BUY_NUM" NUMBER(11) DEFAULT 0  NULL ,
"VIEW_NUM" NUMBER(11) DEFAULT 0  NULL ,
"REMARK" CLOB NULL ,
"GB_STATUS" NUMBER(2) NULL ,
"ADD_TIME" NUMBER(20) NULL ,
"STORE_ID" NUMBER(10) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE;

ALTER TABLE "ES_COST_DOWN_GOODS" ADD CHECK ("GB_ID" IS NOT NULL);
ALTER TABLE "ES_COST_DOWN_GOODS" ADD PRIMARY KEY ("GB_ID");

DROP SEQUENCE S_ES_COST_DOWN_GOODS;
CREATE SEQUENCE S_ES_COST_DOWN_GOODS MINVALUE 1 MAXVALUE 9999999999999999999999999999 START WITH 1 INCREMENT BY 1 CACHE 20;

CREATE OR REPLACE TRIGGER "TIB_ES_COST_DOWN_GOODS" BEFORE INSERT ON "ES_COST_DOWN_GOODS" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW ENABLE
DECLARE
    INTEGRITY_ERROR  EXCEPTION;
    ERRNO            INTEGER;
    ERRMSG           CHAR(200);
    MAXID           INTEGER;
BEGIN
    IF :NEW."GB_ID" IS NULL THEN
        SELECT MAX("GB_ID") INTO MAXID FROM ES_COST_DOWN_GOODS;
        SELECT S_ES_COST_DOWN_GOODS.NEXTVAL INTO :NEW."GB_ID" FROM DUAL;
        IF MAXID>:NEW."GB_ID" THEN
            LOOP
                SELECT S_ES_COST_DOWN_GOODS.NEXTVAL INTO :NEW."GB_ID" FROM DUAL;
                EXIT WHEN MAXID<:NEW."GB_ID";
            END LOOP;
        END IF;
    END IF;
EXCEPTION
    WHEN INTEGRITY_ERROR THEN
        RAISE_APPLICATION_ERROR(ERRNO, ERRMSG);
END;
/

DROP TABLE "ES_COST_DOWN_ACTIVE";
CREATE TABLE "ES_COST_DOWN_ACTIVE" (
"ACT_ID" NUMBER(11) NOT NULL ,
"ACT_NAME" VARCHAR2(255 BYTE) NULL ,
"START_TIME" NUMBER(20) NULL ,
"END_TIME" NUMBER(20) NULL ,
"JOIN_END_TIME" NUMBER(20) NULL ,
"ACT_STATUS" NUMBER(2) NULL ,
"ADD_TIME" NUMBER(20) NULL ,
"ACT_TAG_ID" NUMBER(10) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE;

ALTER TABLE "ES_COST_DOWN_ACTIVE" ADD CHECK ("ACT_ID" IS NOT NULL);
ALTER TABLE "ES_COST_DOWN_ACTIVE" ADD PRIMARY KEY ("ACT_ID");

DROP SEQUENCE S_ES_COST_DOWN_ACTIVE;
CREATE SEQUENCE S_ES_COST_DOWN_ACTIVE MINVALUE 1 MAXVALUE 9999999999999999999999999999 START WITH 1 INCREMENT BY 1 CACHE 20;


CREATE OR REPLACE TRIGGER "TIB_ES_COST_DOWN_ACTIVE" BEFORE INSERT ON "ES_COST_DOWN_ACTIVE" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW ENABLE
DECLARE
    INTEGRITY_ERROR  EXCEPTION;
    ERRNO            INTEGER;
    ERRMSG           CHAR(200);
    MAXID           INTEGER;
BEGIN
    IF :NEW."ACT_ID" IS NULL THEN
        SELECT MAX("ACT_ID") INTO MAXID FROM ES_COST_DOWN_GOODS;
        SELECT S_ES_COST_DOWN_ACTIVE.NEXTVAL INTO :NEW."ACT_ID" FROM DUAL;
        IF MAXID>:NEW."ACT_ID" THEN
            LOOP
                SELECT S_ES_COST_DOWN_ACTIVE.NEXTVAL INTO :NEW."ACT_ID" FROM DUAL;
                EXIT WHEN MAXID<:NEW."ACT_ID";
            END LOOP;
        END IF;
    END IF;
EXCEPTION
    WHEN INTEGRITY_ERROR THEN
        RAISE_APPLICATION_ERROR(ERRNO, ERRMSG);
END;
/

5.end



6.王纪峰:店铺加酒分类的佣金
ALTER TABLE es_store ADD (wine_commission number);
ALTER TABLE es_store ADD (chinese_spirits_commission number);
ALTER TABLE es_store ADD (foreign_spirits_commission number);
ALTER TABLE es_store ADD (beer_commission number);
ALTER TABLE es_store ADD (other_spirits_commission number);



ALTER TABLE es_order ADD (store_type_name varchar(50));
ALTER TABLE es_order ADD (site varchar(10));


7.促销 删除无用字段 - Jeffrey
ALTER TABLE ES_ACTIVITY DROP (FILL_MINUS);
ALTER TABLE ES_ACTIVITY DROP (MINUS_VALUE);
ALTER TABLE ES_ACTIVITY DROP (FILL_GIFT);
ALTER TABLE ES_ACTIVITY DROP (DISCOUNT);
ALTER TABLE ES_ACTIVITY DROP (FILL_FREE_SHIPPING);
ALTER TABLE ES_ACTIVITY ADD (PROMOTION_RULE VARCHAR2(255 BYTE)); --减免规则

8.Cart 购物车表 加冗余字段 - Jeffrey
ALTER TABLE ES_CART ADD (CURRENT_ACTIVITY NUMBER DEFAULT 0); --是否有活动 默认0
ALTER TABLE ES_CART ADD (CURRENT_ACTIVITY_NAME VARCHAR2(200) DEFAULT ''); --是否有活动 默认''

update es_store set  store_type = 1;

8.Ken ERP的标记
update ES_ORDER set is_erp_process=0 where parent_id is not null and is_erp_process is null;

--注释了用来测试的
--select count(*) ES_ORDER set is_erp_process=0 where parent_id is not null and is_erp_process is null;

9.加入支付时间
ALTER TABLE ES_ORDER ADD (payment_time NUMBER(20));

10.4个分摊 以及 佣金 - Jeffrey
ALTER TABLE ES_ORDER_ITEMS ADD (PROMOTION_PROPORTION NUMBER(20,2)); --满减分摊
ALTER TABLE ES_ORDER_ITEMS ADD (FREIGHT_PROPORTION NUMBER(20,2)); --运费分摊
ALTER TABLE ES_ORDER_ITEMS ADD (RED_PACKETS_PROPORTION NUMBER(20,2)); --红包分摊
ALTER TABLE ES_ORDER_ITEMS ADD (COUPON_PROPORTION NUMBER(20,2)); --优惠券分摊
ALTER TABLE ES_ORDER_ITEMS ADD (COMMISSION NUMBER(20,2)); --佣金


11、增加退货金额、退货地址字段
ALTER TABLE ES_SELLBACK_LIST ADD (RETURN_PRICE varchar(50));
ALTER TABLE ES_SELLBACK_LIST ADD (RETURN_ADDRESS varchar(255));



13、增加了三个字段
ALTER TABLE ES_SELLBACK_LIST ADD (kddh varchar(255));
ALTER TABLE ES_SELLBACK_LIST ADD (wlgs varchar(255));
ALTER TABLE ES_SELLBACK_LIST ADD (tythstatus NUMBER(10));


14、闪购活动增加字段
ALTER TABLE ES_GROUPBUY_GOODS ADD (IMG_NEXT_URL varchar(255));

15.加入佣金比例冗余字段
ALTER TABLE ES_ORDER_ITEMS ADD (COMMISSION_RATE NUMBER(20, 2) default 0); --佣金比例

16.
ALTER TABLE ES_CONTACT ADD (source varchar(255));

17.增加了酒周边的佣金比例
ALTER TABLE es_store ADD (around_commission number);

18.订单id
ALTER TABLE ES_SELLBACK_LIST ADD (orderid NUMBER(10));

19.增加退货时间字段
ALTER TABLE ES_SELLBACK_LIST ADD (refund_time NUMBER(20));


20.Order 订单 妥投时间 退款时间需要精确到时分秒
ALTER TABLE ES_ORDER   MODIFY "SIGNING_TIME" NUMBER(20,0);
ALTER TABLE ES_ORDER   MODIFY "ALLOCATION_TIME" NUMBER(20,0);


21. 改变退款单 退货金额为 Double 所有数据被清0
delete  from  ES_SELLBACK_LIST;
ALTER TABLE "ES_SELLBACK_LIST"   MODIFY "RETURN_PRICE" NUMBER(20,2);