<?xml version='1.0'?>
<!-- NOTE: this file is autogenerated by XBeans -->

<xs:schema elementFormDefault='qualified'
		   targetNamespace='http://jencks.org/1.3'
		   xmlns:xs='http://www.w3.org/2001/XMLSchema'
		   xmlns:tns='http://jencks.org/1.3'>

	<!-- element for type: org.jencks.factory.BootstrapContextFactoryBean -->
	<xs:element name='bootstrapContextFactory'>
		<xs:annotation>
			<xs:documentation><![CDATA[
        A Spring {@link FactoryBean} for creating a {@link BootstrapContext} for the JCA container
with the {@link WorkManager} and {@link ExtendedTransactionManager}.
      ]]></xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name='applicationContext' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='resourceManagers' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='transactionContextManager' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='transactionLog' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='transactionManager' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='workManager' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='xidImporter' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name='applicationContext' type='xs:string'/>
			<xs:attribute name='defaultTransactionTimeoutSeconds' type='xs:integer'/>
			<xs:attribute name='resourceManagers' type='xs:string'/>
			<xs:attribute name='threadPoolSize' type='xs:integer'/>
			<xs:attribute name='transactionContextManager' type='xs:string'/>
			<xs:attribute name='transactionLog' type='xs:string'/>
			<xs:attribute name='transactionManager' type='xs:string'/>
			<xs:attribute name='workManager' type='xs:string'/>
			<xs:attribute name='xidImporter' type='xs:string'/>
			<xs:attribute name='id' type='xs:ID'/>
			<xs:anyAttribute namespace='##other' processContents='lax'/>
		</xs:complexType>
	</xs:element>


	<!-- element for type: org.jencks.factory.ConnectionManagerFactoryBean -->
	<xs:element name='connectionManagerFactory'>
		<xs:annotation>
			<xs:documentation><![CDATA[
        This FactoryBean creates a local JCA connection factory outside
a J2EE application server.
<p/>
The connection manager will be then injected in the
LocalConnectionFactoryBean, class of the JCA support of Spring.
      ]]></xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name='applicationContext' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='connectionTracker' minOccurs='0' maxOccurs='1'>
					<xs:annotation>
						<xs:documentation><![CDATA[
              Set the connection tracker for the Geronimo Connection Manager.
            ]]></xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='poolingSupport' minOccurs='0' maxOccurs='1'>
					<xs:annotation>
						<xs:documentation><![CDATA[
              Set the pooling support for the Geronimo Connection Manager.
Geronimo provides two kinds of pool: single and partitioned.
            ]]></xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='transactionContextManager' minOccurs='0' maxOccurs='1'>
					<xs:annotation>
						<xs:documentation><![CDATA[
              Set the transaction context manager for the Geronimo Connection Manager.
            ]]></xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='transactionSupport' minOccurs='0' maxOccurs='1'>
					<xs:annotation>
						<xs:documentation><![CDATA[
              Set the transaction support for the Geronimo Connection Manager.
Geronimo provides in this case three kinds of support like the
JCA specification: no transaction, local transactions, XA transactions.
            ]]></xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name='applicationContext' type='xs:string'/>
			<xs:attribute name='connectionTracker' type='xs:string'>
				<xs:annotation>
					<xs:documentation><![CDATA[
            Set the connection tracker for the Geronimo Connection Manager.
          ]]></xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name='containerManagedSecurity' type='xs:boolean'>
				<xs:annotation>
					<xs:documentation><![CDATA[
            Enables/disables container managed security
          ]]></xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name='poolingSupport' type='xs:string'>
				<xs:annotation>
					<xs:documentation><![CDATA[
            Set the pooling support for the Geronimo Connection Manager.
Geronimo provides two kinds of pool: single and partitioned.
          ]]></xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name='transactionContextManager' type='xs:string'>
				<xs:annotation>
					<xs:documentation><![CDATA[
            Set the transaction context manager for the Geronimo Connection Manager.
          ]]></xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name='transactionSupport' type='xs:string'>
				<xs:annotation>
					<xs:documentation><![CDATA[
            Set the transaction support for the Geronimo Connection Manager.
Geronimo provides in this case three kinds of support like the
JCA specification: no transaction, local transactions, XA transactions.
          ]]></xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name='id' type='xs:ID'/>
			<xs:anyAttribute namespace='##other' processContents='lax'/>
		</xs:complexType>
	</xs:element>


	<!-- element for type: org.jencks.JCAConnector -->
	<xs:element name='connector'>
		<xs:annotation>
			<xs:documentation><![CDATA[
        Represents a connector in the JCA container - which represents a single
activation specification on a resource adapter
      ]]></xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name='activationSpec' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='beanFactory' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='bootstrapContext' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='endpointFactory' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='jcaContainer' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:choice minOccurs='0' maxOccurs='1'>
							<xs:element ref='tns:jcaContainer'/>
						</xs:choice>
					</xs:complexType>
				</xs:element>
				<xs:element name='resourceAdapter' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='transactionManager' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name='acknowledgeType' type='xs:string'/>
			<xs:attribute name='activationSpec' type='xs:string'/>
			<xs:attribute name='beanFactory' type='xs:string'/>
			<xs:attribute name='beanName' type='xs:string'/>
			<xs:attribute name='bootstrapContext' type='xs:string'/>
			<xs:attribute name='endpointFactory' type='xs:string'/>
			<xs:attribute name='jcaContainer' type='xs:string'/>
			<xs:attribute name='ref' type='xs:string'>
				<xs:annotation>
					<xs:documentation><![CDATA[
            Returns the name of the MessageListener POJO in Spring
          ]]></xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name='resourceAdapter' type='xs:string'/>
			<xs:attribute name='transactionManager' type='xs:string'/>
			<xs:attribute name='id' type='xs:ID'/>
			<xs:anyAttribute namespace='##other' processContents='lax'/>
		</xs:complexType>
	</xs:element>


	<!-- element for type: org.jencks.factory.GeronimoTransactionManagerFactoryBean -->
	<xs:element name='geronimoTransactionManagerFactory'>
		<xs:annotation>
			<xs:documentation><![CDATA[
        This FactoryBean creates and configures the Geronimo implementation
of the UserTransaction and TransactionManager interfaces.
<p/>
This factory is based on the Geronimo Transaction Context Manager.
      ]]></xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name='applicationContext' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='transactionContextManager' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name='applicationContext' type='xs:string'/>
			<xs:attribute name='transactionContextManager' type='xs:string'/>
			<xs:attribute name='id' type='xs:ID'/>
			<xs:anyAttribute namespace='##other' processContents='lax'/>
		</xs:complexType>
	</xs:element>


	<!-- element for type: org.jencks.factory.HowlLogFactoryBean -->
	<xs:element name='howlLog'>
		<xs:complexType>
			<xs:sequence>
				<xs:element name='xidFactory' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name='bufferClassName' type='xs:string'/>
			<xs:attribute name='bufferSizeKBytes' type='xs:integer'/>
			<xs:attribute name='checksumEnabled' type='xs:boolean'/>
			<xs:attribute name='flushSleepTimeMilliseconds' type='xs:integer'/>
			<xs:attribute name='logFileDir' type='xs:string'/>
			<xs:attribute name='logFileExt' type='xs:string'/>
			<xs:attribute name='logFileName' type='xs:string'/>
			<xs:attribute name='maxBlocksPerFile' type='xs:integer'/>
			<xs:attribute name='maxBuffers' type='xs:integer'/>
			<xs:attribute name='maxLogFiles' type='xs:integer'/>
			<xs:attribute name='minBuffers' type='xs:integer'/>
			<xs:attribute name='serverBaseDir' type='xs:string'/>
			<xs:attribute name='threadsWaitingForceThreshold' type='xs:integer'/>
			<xs:attribute name='xidFactory' type='xs:string'/>
			<xs:attribute name='id' type='xs:ID'/>
			<xs:anyAttribute namespace='##other' processContents='lax'/>
		</xs:complexType>
	</xs:element>


	<!-- element for type: org.jencks.JCAConnectorLifecycleFactory -->
	<xs:element name='jCAConnectorLifecycleFactory'>
		<xs:annotation>
			<xs:documentation><![CDATA[
        A factory bean for Jencks JCAConnector classes that can also manage
the lifecycle (i.e. start/stop) of a JCAConnector. This is necessary
because the JCAConnector class does not provide any means for starting
and stopping message consumption.
<p>
Represents a factory class that can be configured once, and then used
multiple times to return lightweight JCAConnector objects that can be
independently stopped and started.
<p>
This can be useful when JCAConnector's need to be configured via a
dependency injection container. The container should be used to
configure a JCAConnectorLifecycleFactory instead, and classes can
then use this class to obtain the JCAConnector's, start them, and stop
them.
      ]]></xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name='activationSpec' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='beanFactory' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='bootstrapContext' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='endpointFactory' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='jcaContainer' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:choice minOccurs='0' maxOccurs='1'>
							<xs:element ref='tns:jcaContainer'/>
						</xs:choice>
					</xs:complexType>
				</xs:element>
				<xs:element name='resourceAdapter' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='transactionManager' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name='activationSpec' type='xs:string'/>
			<xs:attribute name='beanFactory' type='xs:string'/>
			<xs:attribute name='beanName' type='xs:string'/>
			<xs:attribute name='bootstrapContext' type='xs:string'/>
			<xs:attribute name='endpointFactory' type='xs:string'/>
			<xs:attribute name='jcaContainer' type='xs:string'/>
			<xs:attribute name='ref' type='xs:string'>
				<xs:annotation>
					<xs:documentation><![CDATA[
            Returns the name of the MessageListener POJO in Spring
          ]]></xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name='resourceAdapter' type='xs:string'/>
			<xs:attribute name='transactionManager' type='xs:string'/>
			<xs:attribute name='id' type='xs:ID'/>
			<xs:anyAttribute namespace='##other' processContents='lax'/>
		</xs:complexType>
	</xs:element>


	<!-- element for type: org.jencks.JCAContainer -->
	<xs:element name='jcaContainer'>
		<xs:annotation>
			<xs:documentation><![CDATA[
        Represents a base JCA container which has no dependency on Geronimo and
requires a mandatory {@link BootstrapContext} and {@link ResourceAdapter}
properties to be configured. <p/> Typically Spring users will use the
{@link BootstrapContextFactoryBean} to create the {@link BootstrapContext}
instance, with the work manager and transaction manager.
      ]]></xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name='applicationContext' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='bootstrapContext' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='connectors' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:choice minOccurs='0' maxOccurs='unbounded'>
							<xs:element ref='tns:connector'/>
						</xs:choice>
					</xs:complexType>
				</xs:element>
				<xs:element name='resourceAdapter' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name='applicationContext' type='xs:string'/>
			<xs:attribute name='bootstrapContext' type='xs:string'/>
			<xs:attribute name='lazyLoad' type='xs:boolean'/>
			<xs:attribute name='resourceAdapter' type='xs:string'/>
			<xs:attribute name='id' type='xs:ID'/>
			<xs:anyAttribute namespace='##other' processContents='lax'/>
		</xs:complexType>
	</xs:element>


	<!-- element for type: org.jencks.factory.LocalTransactionFactoryBean -->
	<xs:element name='localTransactionFactory'>
		<xs:annotation>
			<xs:documentation><![CDATA[
        This FactoryBean creates the local transaction strategy for the
JCA connection manager used.
<p/>
This class can be injected in the ConnectionManagerFactoryBean to
configure the ConnectionManager instance returned.
      ]]></xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name='id' type='xs:ID'/>
			<xs:anyAttribute namespace='##other' processContents='lax'/>
		</xs:complexType>
	</xs:element>


	<!-- element for type: org.jencks.factory.NoTransactionFactoryBean -->
	<xs:element name='noTransactionFactory'>
		<xs:annotation>
			<xs:documentation><![CDATA[
        This FactoryBean creates the no transaction strategy for the
JCA connection manager used.
<p/>
This class can be injected in the ConnectionManagerFactoryBean to
configure the ConnectionManager instance returned.
      ]]></xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name='id' type='xs:ID'/>
			<xs:anyAttribute namespace='##other' processContents='lax'/>
		</xs:complexType>
	</xs:element>


	<!-- element for type: org.jencks.factory.PartitionedPoolFactoryBean -->
	<xs:element name='partitionedPoolFactory'>
		<xs:annotation>
			<xs:documentation><![CDATA[
        This FactoryBean creates the partitionned pool strategy for
the Geronimo connection manager.
<p/>
This class is based on the common pool properties defined in
the AbstractGeronimoPool class and two other properties:
partitionByConnectionRequestInfo to manage pooling with the
request informations and partitionBySubject to manage pooling
with the subjects.
      ]]></xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name='blockingTimeoutMilliseconds' type='xs:integer'>
				<xs:annotation>
					<xs:documentation><![CDATA[
            Set the blocking timeout property in milliseconds.
          ]]></xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name='idleTimeoutMinutes' type='xs:integer'>
				<xs:annotation>
					<xs:documentation><![CDATA[
            Set the idle timeout property in minutes.
          ]]></xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name='matchAll' type='xs:boolean'>
				<xs:annotation>
					<xs:documentation><![CDATA[
            Set the match all property.
          ]]></xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name='matchOne' type='xs:boolean'>
				<xs:annotation>
					<xs:documentation><![CDATA[
            Set the match one property.
          ]]></xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name='maxSize' type='xs:integer'>
				<xs:annotation>
					<xs:documentation><![CDATA[
            Set the max size property of the pool.
          ]]></xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name='minSize' type='xs:integer'>
				<xs:annotation>
					<xs:documentation><![CDATA[
            Set the min size property of the pool.
          ]]></xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name='partitionByConnectionRequestInfo' type='xs:boolean'>
				<xs:annotation>
					<xs:documentation><![CDATA[
            Set the partitionByConnectionRequestInfo for the pool.
          ]]></xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name='partitionBySubject' type='xs:boolean'>
				<xs:annotation>
					<xs:documentation><![CDATA[
            Set the partitionBySubject for the pool.
          ]]></xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name='selectOneAssumeMatch' type='xs:boolean'>
				<xs:annotation>
					<xs:documentation><![CDATA[
            Set the select one assume mathc property.
          ]]></xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name='id' type='xs:ID'/>
			<xs:anyAttribute namespace='##other' processContents='lax'/>
		</xs:complexType>
	</xs:element>


	<!-- element for type: org.jencks.factory.SinglePoolFactoryBean -->
	<xs:element name='singlePoolFactory'>
		<xs:annotation>
			<xs:documentation><![CDATA[
        This FactoryBean creates the partitionned pool strategy for
the Geronimo connection manager.
<p/>
This class is based on the common pool properties defined in
the AbstractGeronimoPool class.
      ]]></xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name='blockingTimeoutMilliseconds' type='xs:integer'>
				<xs:annotation>
					<xs:documentation><![CDATA[
            Set the blocking timeout property in milliseconds.
          ]]></xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name='idleTimeoutMinutes' type='xs:integer'>
				<xs:annotation>
					<xs:documentation><![CDATA[
            Set the idle timeout property in minutes.
          ]]></xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name='matchAll' type='xs:boolean'>
				<xs:annotation>
					<xs:documentation><![CDATA[
            Set the match all property.
          ]]></xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name='matchOne' type='xs:boolean'>
				<xs:annotation>
					<xs:documentation><![CDATA[
            Set the match one property.
          ]]></xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name='maxSize' type='xs:integer'>
				<xs:annotation>
					<xs:documentation><![CDATA[
            Set the max size property of the pool.
          ]]></xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name='minSize' type='xs:integer'>
				<xs:annotation>
					<xs:documentation><![CDATA[
            Set the min size property of the pool.
          ]]></xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name='selectOneAssumeMatch' type='xs:boolean'>
				<xs:annotation>
					<xs:documentation><![CDATA[
            Set the select one assume mathc property.
          ]]></xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name='id' type='xs:ID'/>
			<xs:anyAttribute namespace='##other' processContents='lax'/>
		</xs:complexType>
	</xs:element>


	<!-- element for type: org.jencks.TargetSourceMessageListener -->
	<xs:element name='targetSourceMessageListener'>
		<xs:annotation>
			<xs:documentation><![CDATA[
        Represents a pool of MessageListener instances using Spring's
TargetSource for the underlying pool.
      ]]></xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name='targetSource' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name='targetSource' type='xs:string'/>
			<xs:attribute name='id' type='xs:ID'/>
			<xs:anyAttribute namespace='##other' processContents='lax'/>
		</xs:complexType>
	</xs:element>


	<!-- element for type: org.jencks.factory.TransactionContextManagerFactoryBean -->
	<xs:element name='transactionContextManagerFactory'>
		<xs:annotation>
			<xs:documentation><![CDATA[
        This FactoryBean creates and configures the TransactionManagerContext
of Geronimo.
      ]]></xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name='applicationContext' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='resourceManagers' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='transactionLog' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='transactionManager' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='xidFactory' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='xidImporter' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name='applicationContext' type='xs:string'/>
			<xs:attribute name='defaultTransactionTimeoutSeconds' type='xs:integer'/>
			<xs:attribute name='resourceManagers' type='xs:string'/>
			<xs:attribute name='transactionLog' type='xs:string'/>
			<xs:attribute name='transactionManager' type='xs:string'/>
			<xs:attribute name='xidFactory' type='xs:string'/>
			<xs:attribute name='xidImporter' type='xs:string'/>
			<xs:attribute name='id' type='xs:ID'/>
			<xs:anyAttribute namespace='##other' processContents='lax'/>
		</xs:complexType>
	</xs:element>


	<!-- element for type: org.jencks.factory.TransactionManagerFactoryBean -->
	<xs:element name='transactionManagerFactory'>
		<xs:annotation>
			<xs:documentation><![CDATA[
        This FactoryBean creates and configures the Geronimo implementation
of the TransactionManager interface.
      ]]></xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name='resourceManagers' minOccurs='0' maxOccurs='1'>
					<xs:annotation>
						<xs:documentation><![CDATA[
              Set the resource managers
            ]]></xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='transactionLog' minOccurs='0' maxOccurs='1'>
					<xs:annotation>
						<xs:documentation><![CDATA[
              Set the transaction log for the transaction context manager.
            ]]></xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='xidFactory' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name='defaultTransactionTimeoutSeconds' type='xs:integer'>
				<xs:annotation>
					<xs:documentation><![CDATA[
            Set the default transaction timeout in second.
          ]]></xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name='resourceManagers' type='xs:string'>
				<xs:annotation>
					<xs:documentation><![CDATA[
            Set the resource managers
          ]]></xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name='transactionLog' type='xs:string'>
				<xs:annotation>
					<xs:documentation><![CDATA[
            Set the transaction log for the transaction context manager.
          ]]></xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name='xidFactory' type='xs:string'/>
			<xs:attribute name='id' type='xs:ID'/>
			<xs:anyAttribute namespace='##other' processContents='lax'/>
		</xs:complexType>
	</xs:element>


	<!-- element for type: org.jencks.factory.WorkManagerFactoryBean -->
	<xs:element name='workManagerFactory'>
		<xs:annotation>
			<xs:documentation><![CDATA[
        A Spring {@link FactoryBean} for creating a {@link BootstrapContext} for the JCA container
with the {@link WorkManager} and {@link ExtendedTransactionManager}.
      ]]></xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name='applicationContext' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='resourceManagers' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='threadPool' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='transactionContextManager' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='transactionLog' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='transactionManager' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name='xidImporter' minOccurs='0' maxOccurs='1'>
					<xs:complexType>
						<xs:sequence minOccurs='0' maxOccurs='1'>
							<xs:any/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name='applicationContext' type='xs:string'/>
			<xs:attribute name='defaultTransactionTimeoutSeconds' type='xs:integer'/>
			<xs:attribute name='resourceManagers' type='xs:string'/>
			<xs:attribute name='threadPool' type='xs:string'/>
			<xs:attribute name='threadPoolSize' type='xs:integer'/>
			<xs:attribute name='transactionContextManager' type='xs:string'/>
			<xs:attribute name='transactionLog' type='xs:string'/>
			<xs:attribute name='transactionManager' type='xs:string'/>
			<xs:attribute name='xidImporter' type='xs:string'/>
			<xs:attribute name='id' type='xs:ID'/>
			<xs:anyAttribute namespace='##other' processContents='lax'/>
		</xs:complexType>
	</xs:element>


	<!-- element for type: org.jencks.factory.XATransactionFactoryBean -->
	<xs:element name='xATransactionFactory'>
		<xs:annotation>
			<xs:documentation><![CDATA[
        This FactoryBean creates the xa transaction strategy for the
JCA connection manager used.
<p/>
This class can be injected in the ConnectionManagerFactoryBean to
configure the ConnectionManager instance returned.
      ]]></xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name='useThreadCaching' type='xs:boolean'>
				<xs:annotation>
					<xs:documentation><![CDATA[
            Set the useThreadCaching property to allow the ConnectionManager to
cache connections for a thread.
          ]]></xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name='useTransactionCaching' type='xs:boolean'>
				<xs:annotation>
					<xs:documentation><![CDATA[
            Set the useTransactionCaching property to allow the ConnectionManager to
cache connections for the current transaction.
<p/>
This allows connections to be used several times in the same transaction.
So it prevents the connection to be enlisted several times in the
current transaction.
          ]]></xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name='id' type='xs:ID'/>
			<xs:anyAttribute namespace='##other' processContents='lax'/>
		</xs:complexType>
	</xs:element>


</xs:schema>
