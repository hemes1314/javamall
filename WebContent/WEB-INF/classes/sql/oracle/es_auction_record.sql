--创建ES_AUCTION_RECORD表
BEGIN
	EXECUTE IMMEDIATE 'DROP TRIGGER TIB_ES_AUCTION_RECORD';
	EXCEPTION WHEN OTHERS THEN NULL;
END;

BEGIN
	EXECUTE IMMEDIATE 'DROP TABLE ES_AUCTION_RECORD';
	EXCEPTION WHEN OTHERS THEN NULL;
END;

BEGIN
	EXECUTE IMMEDIATE 'DROP SEQUENCE S_ES_AUCTION_RECORD';
	EXCEPTION WHEN OTHERS THEN NULL;
END;

CREATE TABLE ES_AUCTION_RECORD (
  ID NUMBER(5) NOT NULL ,
  AUCTION_ID NUMBER(5) DEFAULT '',
  STATUS NUMBER(1) DEFAULT '',
  USERID NUMBER(5) DEFAULT '',
  PRICE VARCHAR(5) DEFAULT '',
  USER_NAME VARCHAR(5) DEFAULT '',
  TIME VARCHAR(20) DEFAULT '',
  PRIMARY KEY (ID)
);

CREATE SEQUENCE S_ES_AUCTION_RECORD;

CREATE TRIGGER "TIB_ES_AUCTION_RECORD" BEFORE INSERT
	ON ES_AUCTION_RECORD FOR EACH ROW
	DECLARE
	INTEGRITY_ERROR  EXCEPTION;
	ERRNO            INTEGER;
	ERRMSG           CHAR(200);
	MAXID						 INTEGER;
	BEGIN
		IF :NEW."ID" IS NULL THEN
			SELECT MAX("ID") INTO MAXID FROM ES_AUCTION_RECORD;
			SELECT S_ES_AUCTION_RECORD.NEXTVAL INTO :NEW."ID" FROM DUAL;
			IF MAXID>:NEW."ID" THEN
				LOOP
					SELECT S_ES_AUCTION_RECORD.NEXTVAL INTO :NEW."ID" FROM DUAL;
					EXIT WHEN MAXID<:NEW."ID";
				END LOOP;
			END IF;
		END IF;
	EXCEPTION
		WHEN INTEGRITY_ERROR THEN
			RAISE_APPLICATION_ERROR(ERRNO, ERRMSG);
END;