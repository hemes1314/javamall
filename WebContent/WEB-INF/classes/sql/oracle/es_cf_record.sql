--创建es_cf_record表
BEGIN
	EXECUTE IMMEDIATE 'DROP TRIGGER TIB_ES_CF_RECORD';
	EXCEPTION WHEN OTHERS THEN NULL;
END;

BEGIN
	EXECUTE IMMEDIATE 'DROP TABLE ES_CF_RECORD';
	EXCEPTION WHEN OTHERS THEN NULL;
END;

BEGIN
	EXECUTE IMMEDIATE 'DROP SEQUENCE S_ES_CF_RECORD';
	EXCEPTION WHEN OTHERS THEN NULL;
END;

CREATE TABLE ES_CF_RECORD (
  ID NUMBER(30) NOT NULL AUTO_INCREMENT,
  CF_ID NUMBER(30) DEFAULT NULL,
  MEMBER_ID NUMBER(30) DEFAULT NULL,
  MESSAGE VARCHAR(500) DEFAULT NULL,
  MESSAGE_TIME VARCHAR(200) DEFAULT NULL,
  CF_GOODS_ID NUMBER(30) DEFAULT NULL,
  ADDRESS VARCHAR(500) DEFAULT NULL,
  ORDER_ID NUMBER(30) DEFAULT NULL,
  STATUS NUMBER(4) DEFAULT NULL,
  PRIMARY KEY (ID)
);

CREATE SEQUENCE S_ES_CF_RECORD;

CREATE TRIGGER "TIB_ES_CF_RECORD" BEFORE INSERT
	ON ES_CF_RECORD FOR EACH ROW
	DECLARE
	INTEGRITY_ERROR  EXCEPTION;
	ERRNO            INTEGER;
	ERRMSG           CHAR(200);
	MAXID						 INTEGER;
	BEGIN
		IF :NEW."ID" IS NULL THEN
			SELECT MAX("ID") INTO MAXID FROM ES_CF_RECORD;
			SELECT S_ES_CF_RECORD.NEXTVAL INTO :NEW."ID" FROM DUAL;
			IF MAXID>:NEW."ID" THEN
				LOOP
					SELECT S_ES_CF_RECORD.NEXTVAL INTO :NEW."ID" FROM DUAL;
					EXIT WHEN MAXID<:NEW."ID";
				END LOOP;
			END IF;
		END IF;
	EXCEPTION
		WHEN INTEGRITY_ERROR THEN
			RAISE_APPLICATION_ERROR(ERRNO, ERRMSG);
END;