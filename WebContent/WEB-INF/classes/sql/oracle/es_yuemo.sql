--创建es_yuemo表
BEGIN
	EXECUTE IMMEDIATE 'DROP TRIGGER TIB_ES_YUEMO';
	EXCEPTION WHEN OTHERS THEN NULL;
END;

BEGIN
	EXECUTE IMMEDIATE 'DROP TABLE ES_YUEMO';
	EXCEPTION WHEN OTHERS THEN NULL;
END;

BEGIN
	EXECUTE IMMEDIATE 'DROP SEQUENCE S_ES_YUEMO';
	EXCEPTION WHEN OTHERS THEN NULL;
END;

CREATE TABLE ES_YUEMO (
  ID NUMBER(100) NOT NULL,
  TITLE VARCHAR(200) DEFAULT NULL,
  CONTENT VARCHAR(500) DEFAULT NULL,
  MEMBER VARCHAR(5000) DEFAULT NULL,
  PRICE NUMBER(100) DEFAULT NULL,
  LENGTH NUMBER(100) DEFAULT NULL,
  TIME VARCHAR(200) DEFAULT NULL,
  ADDRESS VARCHAR(500) DEFAULT NULL,
  PRIMARY KEY (ID)
);

CREATE SEQUENCE S_ES_YUEMO;

CREATE TRIGGER "TIB_ES_YUEMO" BEFORE INSERT
	ON ES_YUEMO FOR EACH ROW
	DECLARE
	INTEGRITY_ERROR  EXCEPTION;
	ERRNO            INTEGER;
	ERRMSG           CHAR(200);
	MAXID						 INTEGER;
	BEGIN
		IF :NEW."ID" IS NULL THEN
			SELECT MAX("ID") INTO MAXID FROM ES_YUEMO;
			SELECT S_ES_YUEMO.NEXTVAL INTO :NEW."ID" FROM DUAL;
			IF MAXID>:NEW."ID" THEN
				LOOP
					SELECT S_ES_YUEMO.NEXTVAL INTO :NEW."ID" FROM DUAL;
					EXIT WHEN MAXID<:NEW."ID";
				END LOOP;
			END IF;
		END IF;
	EXCEPTION
		WHEN INTEGRITY_ERROR THEN
			RAISE_APPLICATION_ERROR(ERRNO, ERRMSG);
END;