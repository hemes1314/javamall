--创建es_logi_info表
BEGIN
	EXECUTE IMMEDIATE 'DROP TRIGGER TIB_ES_LOGI_STATUS';
	EXCEPTION WHEN OTHERS THEN NULL;
END;

BEGIN
	EXECUTE IMMEDIATE 'DROP TABLE ES_LOGI_STATUS';
	EXCEPTION WHEN OTHERS THEN NULL;
END;

BEGIN
	EXECUTE IMMEDIATE 'DROP SEQUENCE S_ES_LOGI_STATUS';
	EXCEPTION WHEN OTHERS THEN NULL;
END;

CREATE TABLE ES_LOGI_STATUS (
  ID NUMBER(11) NOT NULL,
  COM VARCHAR(255) DEFAULT '',
  NU VARCHAR(255) DEFAULT '',
  ORDERID NUMBER(30) DEFAULT 0,
  STATUS NUMBER(1) DEFAULT 0 ,
  PRIMARY KEY (ID)
);

CREATE SEQUENCE S_ES_LOGI_STATUS;

CREATE TRIGGER "TIB_ES_LOGI_STATUS" BEFORE INSERT
	ON ES_LOGI_STATUS FOR EACH ROW
	DECLARE
	INTEGRITY_ERROR  EXCEPTION;
	ERRNO            INTEGER;
	ERRMSG           CHAR(200);
	MAXID			 INTEGER;
	BEGIN
		IF :NEW."ID" IS NULL THEN
			SELECT MAX("ID") INTO MAXID FROM ES_LOGI_STATUS;
			SELECT S_ES_LOGI_STATUS.NEXTVAL INTO :NEW."ID" FROM DUAL;
			IF MAXID>:NEW."ID" THEN
				LOOP
					SELECT S_ES_LOGI_STATUS.NEXTVAL INTO :NEW."ID" FROM DUAL;
					EXIT WHEN MAXID<:NEW."ID";
				END LOOP;
			END IF;
		END IF;
	EXCEPTION
		WHEN INTEGRITY_ERROR THEN
			RAISE_APPLICATION_ERROR(ERRNO, ERRMSG);
END;